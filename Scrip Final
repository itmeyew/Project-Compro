using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

namespace Project_Final
{
    class MainCar
    {
        static void Main()
        {
            List<Ticket> Summarysummarize = new List<Ticket>();
            //สร้างlistเพื่อเก็บรายละเอียดข้อมูลการจอง TicketคือObjectที่จะเก็บข้อมูลเข้าไป Summarysummarize คือชื่อตัวแปร
            HashSet<string> Seats = new HashSet<string>(); //ใช้ชุดข้อมูลHashSet(ชุดของค่าที่ไม่ซ้ำกัน) ใช้เก็บที่นั่งที่จองไปแล้ว
            bool continueProgram = true; //ให้ตัวแปร continueProgram มีค่าเริ่มต้นเป็น true (วนใหม่เรื่อยๆ) จะเป็น false ก็ต่อเมื่อยกเลิกหรืออกโปรแกรม

            string[] movies = { "Teeyod", "Godzilla", "Titanic", "The Godfather", "Jurassic Park", "Forrest Gump", "Interstellar", "Avengers: Endgame", "Avatar", "The Matrix" };
            string[] times = { "12:00 P.M", "15:00 P.M", "17:30 P.M", "18:00 P.M", "19:00 P.M", "20:00 P.M", "21:00 P.M" };
            string[] date = { "Monday 25/11/2024", "Tuesday 26/11/2024" };
            //ประกาศ Array

            while (continueProgram) //ทำงานซ้ำจนกว่าโปรแกรมจะเป็น false
            {
                Console.WriteLine("Welcome to Co-Prom Cinema\n");
                DisplayMovies(movies, date); //เรียกmethodsหน้าโปรแกรมหนัง movies date คือค่าที่ส่งเข้ามาเพื่อให้โปรแกรมอ้างอิงค่าที่ส่งมา

                string selectedMoviesDate = SelectedMoviesDate(movies, date, out int scheduleChoice);
                /*ประกาศชื่อตัวแปรเป็นselectedMoviesDate ตัวแปรนี้จะเก็บข้อมูลจาก methods ของ SelectedMoviesDate , out int scheduleChoice คือการส่งตัวแปรของ scheduleChoice เข้าไปในฟังก์ชันที่รับค่าที่ส่งออกจาก SelectedMoviesDate
                 * ตัวอย่างคือเมื่อผู้ใช้ดูหนังที่ 8
                 * scheduleChoice จะเข้าไปเก็บค่าเลข 8
                 * ตรง methods ของ selectedMoviesDate จะมีฟังก์ชันคือค่า เมื่อ scheduleChoice > 5 จะคืนค่า data[1](Tuesday 26/11/2024)
                 * เท่ากับว่า ตัวแปร scheduleChoice จะมีค่าเป็น 8 , ตัวแปร selectedMoviesDate จะมีค่าเป็น data[1](Tuesday 26/11/2024)
                 */
                string selectedTime = SelectedTime(times); //ประกาศตัวแปร เก็บค่าที่ผู้ใช้เลือกเวลาไว้ใน SelectedTime

                int ticketCount = TicketCount(); //ประกาศตัวแปร เก็บค่าที่ผู้ใช้ใส่จำนวนตั๋วไว้ใน TicketCount

                string selectedZone = SelectedZone(out int ticketPrice);
                /*ประกาศตัวแปร เก็บค่าที่ผู้ใช้เลือกที่นั่งไว้ใน SelectedZone
                 * ตัวอย่างคือเมื่อผู้ใช้เลือกโซนที่นั่งโดยเลือกจากหมายเลข 1-3 ฟังก์ชัน ticketPrice จะตั้งราคาตั๋วตามโซนและคืนค่าชื่อโซนเป็นผลลัพธ์
                 *ตัวแปร ticketPrice ที่ส่งด้วย out จะถูกกำหนดราคาภายในฟังก์ชัน (120,160,220)
                 ***ตัวแปร selectedZone จะเก็บชื่อโซน , ticketPrice จะเก็บราคาตั๋ว***
                */

                for (int i = 0; i < ticketCount; i++) //วนลูปตามจำนวนตั๋วที่ผู้ใช้ให้มา เพิ่มทีละ1จนกว่าจะถึงตามจำนวน ticketCount
                {
                    string seatNumbers = GetSeatNumber(Seats, i + 1);
                    /*ใช้ฟังก์ชันจาก GetSeatNumber เพื่อรับเลขที่นั่งสำหรับตั๋ว
                     *i + 1คือ
                     *i คือตัวนับในลูป คือตัวเริ่มต้นที่ 0 และจะเพิ่มไปขึ้น1ไปเรื่อยๆจนถึง ticketCount
                     *เท่ากับค่าของ i จะเริ่มที่ 0 แต่นำมา + 1 เพื่อที่จะให้โปรแกรมเริ่มนับเลขจาก 1 แทนที่จะเป็น 0
                     *(ตัวอย่าง ถ้าไม่มี + 1 โปรแกรมจะแสดงผลว่า ตั๋วใบที่ 0
                     *       ถ้ามี + 1 โปรแกรมจะแสดงผลว่า ตั๋วใบที่ 1)
                     *(ตัวอย่างที่ 2 เมื่อผู้ใช้ป้อน 3 ที่นั่ง(A1,A2,A3))
                     *  รอบลูปรอบที่ 1 จะเริ่มที่ 0 และบวกค่า i + 1 จะแสดงผลว่า ตั๋วใบที่ 1
                     *  รอบลูปรอบที่ 2 จะเริ่มที่ 1 และบวกค่า i + 1 จะแสดงผลว่า ตั๋วใบที่ 2
                     *  รอบลูปรอบที่ 3 จะเริ่มที่ 2 และบวกค่า i + 1 จะแสดงผลว่า ตั๋วใบที่ 3
                     */
                    Ticket ticket = new Ticket(movies[scheduleChoice - 1], selectedTime, selectedMoviesDate, ticketPrice, selectedZone, seatNumbers);
                    //ประกาศสร้าง Object โดยใช้ค่า ชื่อหนัง , เวลา , วันที่ , ราคาตั๋ว , โซนที่นั่ง , ที่นั่ง
                    Summarysummarize.Add(ticket); // เก็บข้อมูลแต่ละตั๋วลงไปใน list ของตั๋ว 
                }

                int totalPrice = ticketCount * ticketPrice; // คำนวณราคาทัั้งหมดจาก จำนวนตั๋ว,ราคาตั๋ว เข้าไปในตัวแปร totalPrice
                totalPrice = ApplyDiscount(ticketCount, totalPrice); //ตรวจสอบจากฟังก์ชัน ApplyDiscount ว่าตั๋วเกิน5ใบมั้ย ถ้าเกินจะรับส่วนลด 10% ละจะถูกอัปเดตลงในตัวแปร totalPrice

                continueProgram = ConfirmBooking(Summarysummarize, ref totalPrice);
                /*
                 * แสดงรายะเอียดการจองทั้งหมดใน Summarysummarize และใช้ผู้ใช้เลือก Yes(จบโปรแกรม) No(เริ่มใหม่) Cancel(ยกเลิกทั้งหมดและออกโปรแกรม)
                 * หาก Yes จะคืนค่า false และโปรแกรมจะหยุด (Cancelเหมือนกัน)
                 * หาก No จะคืนค่า true เพื่อวนลูปใหม่ (ตามตรงนี้ while (continueProgram) //ทำงานซ้ำจนกว่าโปรแกรมจะเป็น false )
                 * ref totalPrice คือ ฟังก์ชันส่งตัวแปรไปฟังก์ชันโดยการอ้างอิง(เมื่อมีการเปลี่ยนแปลงค่า)
                 * (ตัวอย่าง)
                 * ตัวแปร totalPrice คือราคาตั๋วรวมทั้งหมด
                 * ฟังก์ชัน ConfirmBooking เมื่อยืนยันตั๋ว อาจจะมีการเปลี่ยนแปลงราคาตั๋วได้ถ้ามีส่วนลด หากมีจะถือเป็นการคำนวณใหม่
                 * ref totalPrice เลยสามารถเปลี่ยนค่า totalPrice ได้โดยตรงละค่าที่เปลี่ยนจะแสดงผล หากไม่ใช้ ref เมื่อมีการเปลี่ยนแปลงค่าใน ConfirmBooking จะไม่ส่งผลต่อ totalPrice
                 * (ตัวอย่างที่ 2)
                 * มี ref - ราคาตั๋วตอนแรก 500 และได้รับส่วนลด 50 (เปลี่ยนแปลงค่าในฟังก์ชัน)โปรแกรมจะแสดงผลเป็น 450
                 * ไม่มี ref - ราคาตั๋วตอนแรก 500 และได้รับส่วนลด 50 (เปลี่ยนแปลงค่าในฟังก์ชัน)โปรแกรมจะยังคงแสดงผลเป็น 500
                 */
            }
        }

        static void DisplayMovies(string[] movies, string[] date)
        /*ส่วนประกอบ methods 
         * staticสามารถใช้เรียกได้โดยตรงจากคลาส โดยไม่ต้องสร้าง Object ของคลาสก่อน
         * ตัวอย่าง (อิงจากข้อนี้)
         * 
         *      มี static จะสามารถนำไปใช้งานใน method main ได้เลยโดยการพิมพ์แค่ DisplayMovies(movies, date); แบบนี้จะคือการไม่สร้าง object เช่น
         *      static void Main ()
         *      {
         *          DisplayMovies(movies, date);
         *      }
         *      static void DisplayMovies(string[] movies, string[] date)
         *      {
         *          //Code
         *      }
         *      
         *      ไม่มี static ถ้าจะทำไปใช้งานใน method main จะต้องสร้าง object ของคลาสก่อนถึงจะเรียกใช้ได้ เช่น
         *      static void Main ()
         *      {
         *          Program (ชื่อ) = new Program ();
         *          (ชื่อ).DisplayMovies(movies, date); //สร้าง object เพื่อเรียก
         *      }
         *      void DisplayMovies(string[] movies, string[] date)
         *      {
         *          //Code
         *      }
         * 
         * Void คือบอกว่า method นี้ไม่มีค่าที่ส่งกลับ
         *      Void หมายถึงค่าที่บอกว่าmethodนี้ไม่มีค่าที่ส่งกลับไปให้ผู้เรียกใช้ เช่น แสดงผลข้อมูลหรือทำงานโค้ดให้เสร็จโดยไม่ต้องคืนค่ากลับไป
         *      ---ถ้าไม่มี void ก็คือใช้ฟังก์ชัน return เช่น static int Add(int a, int b) { return a + b } ก็คือคืนค่าผลรวม---
         *      
         * string[] movies คือเป็นการรับพารามิเตอร์เป็น array ของชื่อหนัง
         * string[] date คือเป็นการรับพารามิเตอร์เป็น array ของชื่อวันที่
         * พารามิเตอร์ คือ ตัวแปรข้างนอกที่ส่งเข้าไปใน method เพื่อให้ method นั้นสามารถใช้ค่าตัวแปรที่ส่งเข้ามาได้
         */
        {
            Console.WriteLine($"Today's movie program ({date[0]}):"); //แสดงวันที่ data[0](Monday 25/11/2024)
            for (int i = 0; i < 5; i++) //ลุป5เรื่องแรกของ array movies
            {
                Console.WriteLine($"{i + 1}. {movies[i]}"); // i + 1 คือเพิ่มค่าลำดับเริ่มต้น จาก 0 เป็น 1 และดึงชื่อ movies[i] แต่ละเรื่อง (indexที่ 0 ถึง 4)
            }

            Console.WriteLine($"\nTomorrow's movie program ({date[1]}):"); //แสดงวันที่ data[1](Tuesday 26/11/2024)
            for (int i = 5; i < 10; i++) //ลุป5เรื่องหลังของ array movies
            {
                Console.WriteLine($"{i + 1}. {movies[i]}"); // i + 1 คือเพิ่มค่าลำดับเริ่มต้น จาก 5 เป็น 6 และดึงชื่อ movies[i] แต่ละเรื่อง (indexที่ 5 ถึง 9)
            }
        }

        static string SelectedMoviesDate(string[] movies, string[] date, out int scheduleChoice)
        /*Static เพื่อเรียกใช้ได้โดยตรง ชนิดค่าข้อมูลคือ string ชื่อตัว methodคือSelectedMoviesDate รับ Array จาก movies date และส่งออกข้อมูลที่ผู้ใช้เลือกไปที่ตัวแปร scheduleChoice
         * รับข้อมูลมาจากผู้ใช้ (เลือกหมายเลขที่จะดู)
         * ตรวจสอบความถูกต้องของข้อมูล (เลข 1 - 10)
         * คืนค่าวันที่ตามการเลือก 1-5 วันที่25 6-10 วันที่ 26
         */
        {
            while (true) //ลูปไปจนกว่าผู้ใช้จะตอบถูกตามที่ให้เลือก
            {
                Console.Write("\nWhich number movie do you select? : ");
                if (int.TryParse(Console.ReadLine(), out scheduleChoice) && scheduleChoice >= 1 && scheduleChoice <= 10)
                //แปลงค่าเป็น int ค่าที่แปลงจะถูกเก็บใน scheduleChoice และให้เลือก 1 - 10 ถ้าผู้ใช้ตอบถูกต้อง
                {
                    return scheduleChoice <= 5 ? date[0] : date[1]; //จะคืนค่าวันที่ 1-5 วันแรก 6-10 วันที่สอง
                }
                Console.WriteLine("\nInvalid choice. Please try again.\n");
                DisplayMovies(movies, date); //หากตอบผิดจะลูปไปถามใหม่ที่หน้า display อีกครั้ง
            }
        }

        static string SelectedTime(string[] times)
        //Static เพื่อเรียกใช้ได้โดยตรง ชนิดค่าข้อมูลคือ string ชื่อmethod คือ SelectedTime พารามิเตอร์คือ string[] times ที่เป็น array เรื่องเวลา
        {
            int timeChoice; //ตัวแปรเก็บหมายเลขเวลา
            do // ใช้รับค่าที่ผู้ใช้ให้มาก่อน1รอบแล้วค่อยตรวจสอบ และวนจนกว่าผู้ใช้จะตอบถูกเลข (1-10)
            {
                Console.WriteLine("\nPlease select the time:"); //ให้เลือกเวลา
                for (int i = 0; i < times.Length; i++) //ใช้ for ลูปจาก indexที่0 ไปถึงindexสุดท้าย (Length) คือจำนวนสมาชิกทั้งหมดใน array
                {
                    Console.WriteLine($"{i + 1}. {times[i]}"); // +1 เพื่อให้นับรอบที่ 1 แทนที่จะเป็น 0
                }

                Console.Write("\nWhat time do you choose? : "); // ถามให้เลือกเวลา
                if (!int.TryParse(Console.ReadLine(), out timeChoice) || timeChoice < 1 || timeChoice > times.Length)
                // แปลงค่าผู้ป้อนเป็นตัวเลข ถ้าแปลงสำเร็จ ค่าจะถูกเก็บในตัวแปร timeChoice
                {
                    Console.WriteLine("\nInvalid time! please try again."); // ถ้านอกเหนือจากที่กำหนดจะแสดงว่าผิด
                }
            } while (timeChoice < 1 || timeChoice > times.Length); // ใช้รับค่าที่ผู้ใช้ให้มาก่อน1รอบแล้วค่อยตรวจสอบ และวนจนกว่าผู้ใช้จะตอบถูกเลข (1-10)

            return times[timeChoice - 1]; // times คือ array ของข้อความเวลา timeChoice คือหมายเลขที่ผู้ใช้เลือก 1-3
            // -1 คือลดค่าให้ตรงกับ index , สมมุติว่าผู้ใช้เลือกเลข 1 (12:00 PM) จึงใช้ -1 เพื่อแปลงหมายเลขที่เลือกให้ตรงกับ index ใน array (indexที่0ของtimesก็คือ 12:00 PM)
            // return กลับไปยัง methods ที่เรียกใช้
        }

        static int TicketCount()
        //static ใช้เรียกได้โดยตรง int TicketCount methodนี้จะส่งค่ากลับไปเป็น int 
        {
            int ticketCount; //ประกาศตัวแปร
            do // ลูปไป1รอบก่อนที่จะตรวจว่าผู้ใช้ใส่เลขถูกมั้ย
            {
                Console.Write("\nHow many tickets do you want to buy? (Maximum 20) : "); //ถามจำนวนตั๋ว
                if (!int.TryParse(Console.ReadLine(), out ticketCount) || ticketCount <= 0 || ticketCount > 20) //แปลงค่าเป็นint หากใส่ที่ไม่ใช่ตัวหรือเท่ากับหรือน้อยกว่า0 จะเป็น false และลูป
                {
                    Console.WriteLine("\nInvalid input! Please try again."); //แจ้งเตือนว่าผิด
                }

            } while (ticketCount <= 0 || ticketCount > 20); // ถ้าใส่ค่าไม่ถูกต้อง(ไม่ใช่0หรือน้อยกว่า0)ลูปจะทำงานอีกครั้ง

            return ticketCount; //ถ้าได้ค่าที่ถูกต้อง methodนี้จะส่งค่าจำนวนตั๋วที่ผู้ใช่ใส่ไปยังโปรแกรม
        }

        static string SelectedZone(out int ticketPrice)
        //static ส่งตรง methodนี้ส่งค่าเป็นstring ส่งค่าราคาตั่วกลับไปโปรแกรม
        {
            while (true) //ทำงานซ้ำไปเรื่อยๆ ตราบใดที่เงื่อไขใน()ยังเป็นจริง (true)
            {
                Console.WriteLine("\nSelect Zone:");
                Console.WriteLine("1. Economy Zone price 120 THB");
                Console.WriteLine("2. Regular Zone price 160 THB");
                Console.WriteLine("3. VIP Zone price 220 THB");
                Console.Write("\nEnter seat zone you select: ");

                if (int.TryParse(Console.ReadLine(), out int zoneChoice) && zoneChoice >= 1 && zoneChoice <= 3)
                // ตรวจสอบ
                {
                    switch (zoneChoice)
                    {
                        case 1:
                            Console.WriteLine("You select Economy");
                            Console.WriteLine("TicketPrice is 120");
                            ticketPrice = 120;
                            return "Economy"; //หากเลือก 1 ticketPrice จะถูกตั้งเป็น 120 ,method ส่งค่ากลับเป็น Economy
                        case 2:
                            Console.WriteLine("You select Regular");
                            Console.WriteLine("TicketPrice is 160");
                            ticketPrice = 160; //หากเลือก 2 ticketPrice จะถูกตั้งเป็น 160 ,method ส่งค่ากลับเป็น Regular
                            return "Regular";
                        case 3:
                            Console.WriteLine("You select VIP");
                            Console.WriteLine("TicketPrice is 220");
                            ticketPrice = 220; //หากเลือก 3 ticketPrice จะถูกตั้งเป็น 220 ,method ส่งค่ากลับเป็น VIP
                            return "VIP";
                    }
                }
                Console.WriteLine("\nInvalid choice. Please try again.");
            }
        }

        static string GetSeatNumber(HashSet<string> Seats, int ticketNumber) //เหมือนเดิม ที่เพิ่มมาคือ HashSet ก็คือเก็บข้อมูลที่ถูกจองแล้ว
        {
            string seatNumbers;
            while (true) // ลูปไปเรื่อยๆจนกว่าจะได้รับข้อมูลที่ถูกต้องและสามารถส่งค่ากลับได้
            {
                Console.Write($"Enter seat number for Ticket {ticketNumber} (A1-A10, B1-B10): ");
                seatNumbers = Console.ReadLine()?.Trim(); //ใช้?เพื่อป้องกันerrorจากการเรียกใช้ .trim .trim คือตัดช่องว่างรอบๆข้อความที่ไม่จำเป็น
                if (!System.Text.RegularExpressions.Regex.IsMatch(seatNumbers, @"^[A-B][1-9]$|^[A-B]10$"))
                /*System.Text.RegularExpressions เป็น method ใน C#ที่ใช้ตรวจสอบว่า string ตรงตาม pattern ตามที่กำหนดมั้ย
                 * Regex.IsMatch คือใช้เพื่อตรวจสอบว่าตรงตามรูปแบบที่กำหนดมั้ย
                 * System.Text.RegularExpressions ปกติจะคืนค่า true หากข้อความตรงตามรุปแบบที่กำหนด คืนค่า false หากไม่ตรง
                 * ! คือการกลับค่า(นิเสธ) true เป็น false และจาก false เป็น true
                 * ^ คือตำแหน่งเริ่มต้นของข้อความ
                 * A-B อักษร AหรือB
                 * 1-9 เลข 1-9
                 * $ตำแหน่งสิ้นสุดของข้อความ
                 * | คือ or เช่น ^[A-B][1-9]$ จะตรงกับ "A1","B9" , ^[A-B]10$ จะตรงกับ "A10","B10"
                 * ถ้าผู้ใช้ใส่คำตอบใน seatNumbers เป็น C3 ที่ไม่ตรงกับรุปแบบ System.Text.RegularExpressions จะคืนค่า false แต่ติด ! !falseจึงกลายเป็น true จะแสดงข้อความ Invalid seat number และจะรันโปรแกรมต่อ
                 * ถ้าผู้ใช้ใส่คำตอบเป็น A5 ที่ตรงกับรูปแบบ System.Text.RegularExpressions.Regex.IsMatch จะคืนค่า true แต่ติด ! !trueจึงกลายเป็น false จะไม่แสดงข้อความและทำงานต่อ
                 */
                {
                    Console.WriteLine("Invalid seat number. Please choose a seat between A1-A10 or B1-B10.");
                    continue;
                }
                if (Seats.Contains(seatNumbers)) //ใช้ Seats.Contains เพื่อตรวจสอบว่าที่นั่งที่ป้อนมีอยู่ใน HashSet<string> Seats แล้วหรือยัง หากจองแล้วจะแสดงข้อความให้เลือกใหม่พร้อมวนลุป
                {
                    Console.WriteLine($"Seat {seatNumbers} is already booked. Please choose another seat.");
                }
                else
                {
                    Seats.Add(seatNumbers); //เพิ่มเลขที่นั่งลงใน Seats ที่เป็น HashSet ที่เก็บค่าข้อมูลที่เลือกไปแล้ว เพิ่มตำแหน่งseatNumbersลงในSeats ถ้ายังไม่มีจะเพิ่มสำเร็จ ถ้ามีจะไม่เพิ่มและไปตรวจสอบในส่วนของ if (Seats.Contains(seatNumbers))
                    return seatNumbers; //ส่งค่าไป seatNumbers เพื่อให้ GetSeatNumber ส่งค่าตำแหน่งไปยัง main ได้
                }
            }
        }

        static int ApplyDiscount(int ticketCount, int totalPrice)
        {
            if (ticketCount > 5)
            {
                Console.WriteLine($"\nTotal price: {totalPrice} THB");
                double discount = 0.10;
                totalPrice = (int)(totalPrice * (1 - discount)); // 1 หมายถึง 100% ของราคาปกติ
                Console.WriteLine($"\nYou get a 10% discount! Total price after discount: {totalPrice} THB");
            }
            else
            {
                Console.WriteLine($"\nTotal price: {totalPrice} THB");
            }
            return totalPrice;
        }

        static bool ConfirmBooking(List<Ticket> Summarysummarize, ref int totalPrice)
        //static เรียกใช้โดยตรง bool ประเภทtrueหริอfalseเพื่อบอกว่าจะดำเนินต่อหรือสิ้นสุดโปรแกรม Listคือเป็นรายการที่เก็บรายละเอียดการจอง (ใช้แสดลงผ่าน GetSummary) ref รับค่าและราคาปรับเปลี่ยน จะสามารถกลับไปโปรแกรมหลักได้
        {
            while (true) //วนจนกว่าจะตอบถูก
            {
                Console.Write("\nConfirm your booking? (Yes/Add more/Cancel): ");
                string userResponse = Console.ReadLine().ToLower(); //รับข้อมูลจากผู้ใช้ tolower คือเขียนตัวเล็กได้

                if (userResponse == "yes")
                {
                    Console.WriteLine("\nThank you for your booking!");
                    Console.WriteLine("\n---- All Booking Details ----");
                    foreach (var booking in Summarysummarize)
                    //ใช้ foreach เพื่อใช้กับรายการ เช่น list array hashset , var ใช้ให้โปรแกรมเดาประเภทข้อมูลของ booking ที่เป็นตัวแปรที่ถูกกำหนดเพื่อเก็บค่าของแต่ละรายการใน Summarysummarize มาทำงานทีละค่าขณะลูปวน(SummarysummarizeคือListที่เก็บรายละเอียดการจอง)
                    {
                        Console.WriteLine(booking.GetSummary()); //เรียก method GetSummary ของ bookingที่เป็น objectของTicketเพื่อแสดงรายละเอียดตั๋วนั้นๆ
                    }

                    Console.WriteLine("\nGoodbye!");
                    return false; // จบโปรแกรมโดยส่งค่า false กลับไป
                }
                else if (userResponse == "add more")
                {
                    Console.WriteLine("\nStarting a new booking...\n");
                    return true; // รันโปรแกรมต่อ ค่าเป็น true
                }
                else if (userResponse == "cancel")
                {
                    Console.WriteLine("\nBooking cancelled. Exiting program.");
                    return false; // จบโปรแกรมโดยส่งค่า false กลับไป
                }
                else
                {
                    Console.WriteLine("\nPlease type Yes/Add more/Cancel");
                }
            }
        }
    }

    class Ticket // คลาสนี้ใช้สำหรับสร้างObjectที่แทนตั๋ว1ใบ แต่ละObjectจะเก็บข้อมูลเฉพาะของตั๋ว เช่น ชื่อหนัง เวลา วันที่
    {
        // public คือ สามารถเข้าถึงได้จากภายนอกคลาส
        // private set คือไม่สามารถเปลี่ยนค่าจากภายนอกได้(ค่าถูกตั้งค่าได้เฉพาะภายในคลาส
        // get คือใช้ในการอ่านค่า เพื่อดึงค่าที่เก็บไว้ในตัวแปรและส่งค่ากลับให้
        public string Movie { get; private set; }
        public string Time { get; private set; }
        public string Date { get; private set; }
        public int Price { get; private set; }
        public string Zone { get; private set; }
        public string SeatNumber { get; private set; }

        public Ticket(string movie, string time, string date, int price, string zone, string seatNumber) 
        // methodพิเสษที่มีชื่อเดียวกับclassเพื่อกำหนดค่าของObjectตอนที่สร้างขึ้นมา เมื่อสร้างObject Ticket จะต้องส่งข้อมูลมาให้ครบ เช่น ชื่อ เวลา
        {
            Movie = movie; // Teeyod
            Time = time; // 12.00
            Date = date; // 25/11/2024
            Price = price; //120
            Zone = zone; //VIP
            SeatNumber = seatNumber; //A5
        }

        public string GetSummary() //แสดงรายละเอียดตั๋ว
        {
            return $"Movie: {Movie}, Date: {Date}, Time: {Time}, Price: {Price} THB, Zone: {Zone}, Seat: {SeatNumber}";
        }
    }
}
